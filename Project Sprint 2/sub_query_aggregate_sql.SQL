-- Find the total amount spent by each customer
SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    SUM(t.amount) AS total_spent
FROM 
    customers c
JOIN 
    rentals r ON c.customer_id = r.customer_id
JOIN 
    transactions t ON r.rental_id = t.rental_id
GROUP BY 
    c.customer_id
ORDER BY 
    c.customer_id;

-- List all customers who have rented a console that is currently under maintenance
SELECT DISTINCT 
    c.customer_id, 
    c.first_name, 
    c.last_name
FROM 
    customers c
JOIN 
    rentals r ON c.customer_id = r.customer_id
JOIN 
    inventory i ON r.inventory_id = i.inventory_id
WHERE 
    i.status = 'Maintenance';

-- Find the most recent rental details for each customer
SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    MAX(r.rental_start_date) AS last_rental_date
FROM 
    customers c
JOIN 
    rentals r ON c.customer_id = r.customer_id
GROUP BY 
    c.customer_id;

-- Find the total number of rentals for each customer
SELECT 
    c.customer_id, 
    c.first_name, 
    c.last_name, 
    COUNT(r.rental_id) AS total_rentals
FROM 
    customers c
LEFT JOIN 
    rentals r ON c.customer_id = r.customer_id
GROUP BY 
    c.customer_id;

-- Find the average rental cost for each type of console
SELECT 
    con.type, 
    AVG(r.total_cost) AS average_rental_cost
FROM 
    consoles con
JOIN 
    inventory i ON con.console_id = i.console_id
JOIN 
    rentals r ON r.inventory_id = i.inventory_id
GROUP BY 
    con.type;

-- Find the total revenue generated by each console model
SELECT 
    con.model, 
    SUM(t.amount) AS total_revenue
FROM 
    consoles con
JOIN 
    inventory i ON con.console_id = i.console_id
JOIN 
    rentals r ON r.inventory_id = i.inventory_id
JOIN 
    transactions t ON r.rental_id = t.rental_id
GROUP BY 
    con.model;

